(define VARIANT 17)
(define LAST-DIGIT-OF-GROUP-NUMBER 8)
(define KINDS-OF-COINS 4)

(define (first-denomination kinds-of-coins)
  (cond((= kinds-of-coins 1) 2)(else
    (cond((= kinds-of-coins 2) 5)(else(
        cond((= kinds-of-coins 3) 15)(else
            (cond((= kinds-of-coins 4) 25)(else 0))
        ))
    ))
    ))
) 

(define (count-change amount)
  (display "______\n amount: ")
  (display amount)
  (newline)
  (display "KINDS-OF-COINS: ")
  (display KINDS-OF-COINS)
  (newline)
  (let(
       (largest-coin (first-denomination KINDS-OF-COINS))
     )
     (display "largest-coin: ")
     (display largest-coin)
     (newline)
    (cond (((< 0 amount) (cond((< 0 KINDS-OF-COINS) (cond((< 0 largest-coin)
        (let()(display "List of coin denominations: ") 
        (denomination-list KINDS-OF-COINS)
        (display "count-change= ") 
        (cc amount KINDS-OF-COINS)))
        (else (display "Improper parameter value!\ncount-change= ") -1)))
        (else (display "Improper parameter value!\ncount-change= ") -1)))
        (else (display "Improper parameter value!\ncount-change= ") -1))
  )
 )


(define (GR-AMOUNT)
  (remainder (+ (* 100 LAST-DIGIT-OF-GROUP-NUMBER) VARIANT) 231)
)

(define (pier x y)
  (cond((= x 0) (cond((= y 0) 1) (else 0)))(else 0))
)

(define(cc amount kinds-of-coins)

  (cond((= amount 0) 1)(else (cond(
    (= (pier (cond((< amount 0) 1)(else 0)) (cond((= kinds-of-coins 0) 1)(else 0))) 1)
    (+ (cc amount (- kinds-of-coins 1))
    (cc (- amount (first-denomination kinds-of-coins)) kinds-of-coins)))
    (else 0)
  )
  )
  )
 )

(define(denomination-list kinds-of-coins)
  (cond((= kinds-of-coins 0) (let()(newline) 0))
       (else (display (first-denomination kinds-of-coins))
             (display " ")
             (denomination-list (- kinds-of-coins 1)))
  )
)

(display "Variant ")
(display VARIANT)
(newline)
(newline)
(display (count-change 100))
(newline)
(display (count-change (GR-AMOUNT)))
(newline)
(set! KINDS-OF-COINS 13)
(display (count-change 100))
(newline)
